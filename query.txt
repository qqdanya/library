CREATE TABLE Издательство (
    ID INT PRIMARY KEY AUTO_INCREMENT,
    Наименование VARCHAR(30) NOT NULL UNIQUE
);

CREATE TABLE Книга (
    ID INT PRIMARY KEY AUTO_INCREMENT,
    Название VARCHAR(50) NOT NULL UNIQUE,
    ID_издательства INT,
    ISBN CHAR(17) UNIQUE,
    УДК CHAR(20),
    ББК CHAR(20),
    Описание VARCHAR(3000) NOT NULL,
    Количество_страниц INT UNSIGNED NOT NULL,
    Год_издания INT UNSIGNED NOT NULL,
    Изображение VARCHAR(50) NOT NULL,
    FOREIGN KEY (ID_издательства) REFERENCES Издательство(ID)
);

CREATE TABLE Автор (
    ID INT PRIMARY KEY AUTO_INCREMENT,
    Фамилия VARCHAR(30) NOT NULL,
    Имя VARCHAR(30) NOT NULL,
    Отчество VARCHAR(30),
    Пол BOOLEAN NOT NULL
);

CREATE TABLE Автор_Книги (
    ID_книги INT,
    ID_автора INT,
    PRIMARY KEY (ID_книги, ID_автора),
    FOREIGN KEY (ID_книги) REFERENCES Книга(ID),
    FOREIGN KEY (ID_автора) REFERENCES Автор(ID)
);

CREATE TABLE Жанр (
    ID INT PRIMARY KEY AUTO_INCREMENT,
    Наименование VARCHAR(30) NOT NULL UNIQUE
);

CREATE TABLE Жанр_Книги (
    ID_книги INT,
	ID_жанра INT,
	PRIMARY KEY (ID_книги, ID_жанра),
	FOREIGN KEY (ID_книги) REFERENCES Книга(ID),
	FOREIGN KEY (ID_жанра) REFERENCES Жанр(ID)
);

CREATE TABLE Экземпляр_Книги (
    ID INT PRIMARY KEY AUTO_INCREMENT,
    ID_книги INT NOT NULL,
    Количество_выдач INT UNSIGNED NOT NULL DEFAULT 0,
    Дата_добавления DATETIME NOT NULL,
    FOREIGN KEY (ID_книги) REFERENCES Книга(ID)
);

CREATE TABLE Пользователь (
    ID INT PRIMARY KEY AUTO_INCREMENT,
    Фамилия VARCHAR(30) NOT NULL,
    Имя VARCHAR(30) NOT NULL,
    Отчество VARCHAR(30) NOT NULL,
    Пол BOOLEAN NOT NULL,
    Дата_рождения DATE NOT NULL,
    Номер_телефона CHAR(11) NOT NULL,
    Email VARCHAR(50),
    Дата_регистрации DATETIME NOT NULL
);

CREATE TABLE Выданная_Книга (
    ID_экземпляра_книги INT PRIMARY KEY,
    ID_пользователя INT NOT NULL,
    Дата_и_время_выдачи DATETIME NOT NULL,
    Дата_и_время_сдачи DATETIME NOT NULL,
    FOREIGN KEY (ID_пользователя) REFERENCES Пользователь(ID),
    FOREIGN KEY (ID_экземпляра_книги) REFERENCES Экземпляр_Книги(ID)
);

CREATE TABLE Журнал_Учета (
    ID INT PRIMARY KEY AUTO_INCREMENT,
    ID_пользователя INT NOT NULL,
    ID_экземпляра_книги INT NOT NULL,
    Дата_и_время_выдачи DATETIME NOT NULL,
    Дата_и_время_сдачи DATETIME NOT NULL,
    FOREIGN KEY (ID_пользователя) REFERENCES Пользователь(ID),
    FOREIGN KEY (ID_экземпляра_книги) REFERENCES Экземпляр_Книги(ID)
);

CREATE TABLE Продление_Книги (
    ID INT PRIMARY KEY AUTO_INCREMENT,
    ID_экземпляра_книги INT NOT NULL,
    ID_пользователя INT NOT NULL,
    Дата_и_время_начала_продления DATETIME NOT NULL,
    Дата_и_время_окончания_продления DATETIME NOT NULL,
    FOREIGN KEY (ID_экземпляра_книги) REFERENCES Экземпляр_Книги(ID),
    FOREIGN KEY (ID_пользователя) REFERENCES Пользователь(ID)
);

CREATE TABLE Очередь (
    ID INT PRIMARY KEY AUTO_INCREMENT,
    ID_пользователя INT NOT NULL,
    ID_книги INT NOT NULL,
    Дата_и_время DATETIME NOT NULL,
    FOREIGN KEY (ID_пользователя) REFERENCES Пользователь(ID),
    FOREIGN KEY (ID_книги) REFERENCES Книга(ID)
);

CREATE TABLE Готов_К_Получению (
    ID INT PRIMARY KEY AUTO_INCREMENT,
    ID_пользователя INT NOT NULL,
    ID_книги INT NOT NULL,
    ID_экземпляра_книги INT NOT NULL,
    Дата_и_время DATETIME NOT NULL,
    FOREIGN KEY (ID_пользователя) REFERENCES Пользователь(ID),
    FOREIGN KEY (ID_книги) REFERENCES Книга(ID),
    FOREIGN KEY (ID_экземпляра_книги) REFERENCES Экземпляр_Книги(ID)
);

CREATE TABLE Черный_Список (
    ID_пользователя INT PRIMARY KEY,
	Дата_и_время DATETIME NOT NULL
);

CREATE TABLE Админ_Уведомление (
    ID INT PRIMARY KEY AUTO_INCREMENT,
    Уведомление VARCHAR(3000) NOT NULL,
	Дата_и_время DATETIME NOT NULL
);


DELIMITER //
CREATE PROCEDURE Добавить_В_Очередь(user_id INT, book_id INT)
BEGIN
    IF EXISTS (SELECT * FROM Экземпляр_Книги ЭК WHERE ЭК.ID_книги = book_id AND ЭК.ID NOT IN (SELECT ID_экземпляра_книги FROM Выданная_Книга) AND ЭК.ID NOT IN (SELECT ID_экземпляра_книги FROM Готов_К_Получению)) THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = "Ошибка. Книга доступна к выдаче!";
    END IF;
    IF EXISTS (SELECT * FROM Черный_Список ЧС WHERE ЧС.ID_пользователя = user_id) THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = "Ошибка. Пользователь находится в черном списке!";
    END IF;
    IF EXISTS (SELECT * FROM Очередь О WHERE О.ID_книги = book_id AND О.ID_пользователя = user_id) THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = "Ошибка. Пользователь уже стоит в очереди на данную книгу!";
    END IF;
    IF EXISTS (SELECT * FROM Готов_К_Получению П WHERE П.ID_книги = book_id AND П.ID_пользователя = user_id) THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = "Ошибка. Пользователь уже готов к выдаче данной книги!";
    END IF;
    IF EXISTS (SELECT * FROM Выданная_Книга ВК WHERE ВК.ID_пользователя = user_id AND ВК.ID_экземпляра_книги IN (SELECT ID FROM Экземпляр_Книги ЭК WHERE ЭК.ID_книги = book_id)) THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = "Ошибка. Пользователь в данный момент читает эту книгу!";
    END IF;
    INSERT INTO Очередь (ID_пользователя, ID_книги, Дата_и_время) VALUES (user_id, book_id, NOW());
END//

DELIMITER //
CREATE PROCEDURE Удалить_Из_Очереди(user_id INT, book_id INT)
BEGIN
    IF NOT EXISTS (SELECT * FROM Очередь О WHERE О.ID_пользователя = user_id AND О.ID_книги = book_id) THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = "Ошибка. Пользователя нет в очереди на данную книгу!";
    END IF;
    DELETE FROM Очередь О WHERE О.ID_пользователя = user_id AND О.ID_книги = book_id;
END//

DELIMITER //
CREATE PROCEDURE Удалить_Из_Выдачи(user_id INT, book_instance_id INT)
BEGIN
    DECLARE book_id INT;
    DECLARE next_user_id INT;
    DECLARE queue_id INT;
    SELECT ID_книги INTO book_id FROM Экземпляр_Книги ЭК WHERE ЭК.ID = book_instance_id;
    IF EXISTS (SELECT * FROM Очередь О WHERE О.ID_книги = book_id) THEN
        SELECT ID INTO queue_id FROM Очередь Оч WHERE Оч.ID_книги = book_id ORDER BY Оч.ID ASC LIMIT 1;
        SELECT ID_пользователя INTO next_user_id FROM Очередь Оч WHERE Оч.ID = queue_id;
        INSERT INTO Готов_К_Получению (ID_пользователя, ID_книги, ID_экземпляра_книги, Дата_и_время) VALUES (next_user_id, book_id, book_instance_id, NOW());
        DELETE FROM Очередь Оч WHERE Оч.ID = queue_id;
        INSERT INTO Админ_Уведомление (Уведомление, Дата_и_время) VALUES
            (CONCAT('Экземпляр книги ', book_instance_id, ' готов к выдаче пользователю ', next_user_id, '.'), NOW());
    END IF;
    DELETE FROM Готов_К_Получению WHERE ID = user_id AND ID_экземпляра_книги = book_instance_id;
END//

DELIMITER //
CREATE PROCEDURE Выдать_Книгу(user_id INT, book_instance_id INT, due_datetime DATETIME)
BEGIN
    DECLARE book_id INT;
    IF EXISTS (SELECT * FROM Черный_Список ЧС WHERE ЧС.ID_пользователя = user_id) THEN
        DELETE FROM Готов_К_Получению П WHERE П.ID_пользователя = user_id;
        DELETE FROM Очередь О WHERE О.ID_пользователя = user_id;
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = "Ошибка. Пользователь находится в черном списке!";
    END IF;
    IF EXISTS (SELECT * FROM Выданная_Книга ВК WHERE ВК.ID_экземпляра_книги = book_instance_id) THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = "Ошибка. Данный экземпляр книги уже был выдан!";
    END IF;
    SELECT ID_книги INTO book_id FROM Экземпляр_Книги ЭК WHERE ЭК.ID = book_instance_id;
    IF EXISTS (SELECT * FROM Очередь О WHERE О.ID_книги = book_id) THEN
        IF EXISTS (SELECT * FROM Очередь О WHERE О.ID_книги = book_id AND ID_пользователя = user_id) THEN
            SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = "Ошибка. Очередь до пользователя еще не дошла!";
        END IF;
        IF NOT EXISTS (SELECT * FROM Готов_К_Получению П WHERE П.ID_пользователя = user_id AND П.ID_книги = book_id) THEN
            SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = "Ошибка. Пользователю нужно встать в очередь на данную книгу!";
        END IF;
    END IF;
    DELETE FROM Готов_К_Получению П WHERE П.ID_пользователя = user_id AND ID_книги = book_id;
    IF EXISTS (SELECT * FROM Готов_К_Получению П WHERE П.ID_экземпляра_книги = book_instance_id) THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = "Ошибка. Данный экземпляр книги предназначен другому человеку!";
    END IF;
    INSERT INTO Выданная_Книга (ID_пользователя, ID_экземпляра_книги, Дата_и_время_выдачи, Дата_и_время_сдачи)
    VALUES (user_id, book_instance_id, NOW(), due_datetime);
    UPDATE Экземпляр_Книги ЭК SET Количество_выдач=Количество_выдач + 1 WHERE ЭК.ID = book_instance_id;
END//

DELIMITER //
CREATE PROCEDURE Принять_Книгу(user_id INT, book_instance_id INT)
BEGIN
    DECLARE book_id INT;
    DECLARE next_user_id INT;
    DECLARE queue_id INT;
    IF NOT EXISTS (SELECT * FROM Выданная_Книга ВК WHERE ВК.ID_пользователя = user_id AND ВК.ID_экземпляра_книги = book_instance_id) THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = "Ошибка. Данная книга не выдавалась пользователю!";
    END IF;
    INSERT INTO Журнал_Учета (ID_экземпляра_книги, ID_пользователя, Дата_и_время_выдачи, Дата_и_время_сдачи) SELECT ID_пользователя, ID_экземпляра_книги, Дата_и_время_выдачи, NOW() AS Дата_и_время_сдачи FROM Выданная_Книга ВК WHERE ВК.ID_пользователя = user_id AND ВК.ID_экземпляра_книги = book_instance_id;
    DELETE FROM Выданная_Книга ВК WHERE ВК.ID_экземпляра_книги = book_instance_id AND ВК.ID_пользователя = user_id;
    SELECT ID_книги INTO book_id FROM Экземпляр_Книги ЭК WHERE ЭК.ID = book_instance_id;
    IF EXISTS (SELECT * FROM Очередь О WHERE О.ID_книги = book_id) THEN
        SELECT ID INTO queue_id FROM Очередь Оч WHERE Оч.ID_книги = book_id ORDER BY Оч.ID ASC LIMIT 1;
        SELECT ID_пользователя INTO next_user_id FROM Очередь Оч WHERE Оч.ID = queue_id;
        INSERT INTO Готов_К_Получению (ID_пользователя, ID_книги, ID_экземпляра_книги, Дата_и_время) VALUES (next_user_id, book_id, book_instance_id, NOW());
        DELETE FROM Очередь Оч WHERE Оч.ID = queue_id;
        INSERT INTO Админ_Уведомление (Уведомление, Дата_и_время) VALUES
            (CONCAT('Экземпляр книги ', book_instance_id, ' готов к выдаче пользователю ', next_user_id, '.'), NOW());
    END IF;
END//

DELIMITER //
CREATE PROCEDURE Продлить_Книгу(user_id INT, book_instance_id INT, дата_и_время_окончания_продления DATETIME)
BEGIN
    IF EXISTS (SELECT * FROM Черный_Список ЧС WHERE ЧС.ID_пользователя = user_id) THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = "Ошибка. Пользователь находится в черном списке!";
    END IF;
    IF NOT EXISTS (SELECT * FROM Выданная_Книга ВК WHERE ВК.ID_пользователя = user_id AND ВК.ID_экземпляра_книги = book_instance_id) THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = "Ошибка. Данная книга не выдавалась пользователю!";
    END IF;
    INSERT INTO Продление_Книги (ID_экземпляра_книги, ID_пользователя, Дата_и_время_начала_продления, Дата_и_время_окончания_продления) SELECT ID_пользователя, ID_экземпляра_книги, NOW() AS Дата_и_время_начала_продления, дата_и_время_окончания_продления AS Дата_и_время_окончания_продления FROM Выданная_Книга ВК WHERE ВК.ID_пользователя = user_id AND ВК.ID_экземпляра_книги = book_instance_id;
    UPDATE Выданная_Книга SET Дата_и_время_сдачи = дата_и_время_окончания_продления;
END//

DELIMITER //
CREATE PROCEDURE Проверить_Сроки()
BEGIN
    DECLARE done INT DEFAULT FALSE;
    DECLARE id INT;
    DECLARE book_id INT;
    DECLARE book_instance_id INT;
    DECLARE user_id INT;
    DECLARE due_datetime DATETIME;
    DECLARE next_user_id INT;

    DECLARE vk_cursor CURSOR FOR
        SELECT ID_экземпляра_книги, ID_пользователя, Дата_и_время_сдачи
        FROM Выданная_Книга;
    DECLARE rtg_cursor CURSOR FOR
        SELECT ID, ID_пользователя, ID_книги, ID_экземпляра_книги, Дата_и_время
        FROM Готов_К_Получению;
    

    DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = TRUE;

    OPEN vk_cursor;

    read_loop: LOOP
        FETCH vk_cursor INTO book_instance_id, user_id, due_datetime;
        IF done THEN
            LEAVE read_loop;
        END IF;

        -- проверка условия и выполнение нужных действий
        IF DATEDIFF(NOW(), due_datetime) IN (1, 2) THEN
            INSERT INTO Админ_Уведомление (Уведомление, Дата_и_время) VALUES
            (CONCAT('Истек срок пользования экземпляром книги ', book_instance_id, ' у пользователя ',
            user_id, '.'), NOW());
        END IF;
        IF DATEDIFF(NOW(), due_datetime) >= 180 AND NOT EXISTS (SELECT * FROM Черный_Список ЧС WHERE ЧС.ID_пользователя = user_id) THEN
            INSERT INTO Черный_Список (ID_пользователя, Дата_и_время) VALUES (user_id, NOW());
            INSERT INTO Админ_Уведомление (Уведомление, Дата_и_время) VALUES
            (CONCAT('Пользователь ', user_id, ' был занесен в черный список за пользование экземпляром книги ', book_instance_id, ' более 180 дней!'), NOW());
        END IF;
    END LOOP;
    CLOSE vk_cursor;

    OPEN rtg_cursor;

    read_loop: LOOP
        FETCH rtg_cursor INTO id, user_id, book_id, book_instance_id, due_datetime;
        IF done THEN
            LEAVE read_loop;
        END IF;

        -- проверка условия и выполнение нужных действий
        IF DATEDIFF(NOW(), due_datetime) >= 3 THEN
            CALL Удалить_Из_Выдачи(id, book_instance_id);
            INSERT INTO Админ_Уведомление (Уведомление, Дата_и_время) VALUES
            (CONCAT('Пользователь ', user_id, ' не приходил за экземпляром книги ',
            book_instance_id, 'более 3х дней. Он был удален из очереди!'), NOW());
        END IF;
    END LOOP;
    CLOSE rtg_cursor;
END//

DELIMITER |
CREATE TRIGGER Черный_Список_Триггер AFTER INSERT ON Черный_Список FOR EACH ROW
BEGIN
    DELETE FROM Готов_К_Получению П WHERE П.ID_пользователя = NEW.ID_пользователя;
    DELETE FROM Очередь О WHERE О.ID_пользователя = NEW.ID_пользователя;
END|

DELIMITER ;

CREATE EVENT Проверка_Сроков ON SCHEDULE EVERY 1 DAY STARTS '2024-01-01 11:20:00'
DO
    CALL Проверить_Сроки();


INSERT INTO Автор (Фамилия, Имя, Отчество, Пол) VALUES
('Толстой', 'Лев', 'Николаевич', 1),
('Достоевский', 'Федор', 'Михайлович', 1),
('Булгаков', 'Михаил', 'Афанасьевич', 1),
('Пушкин', 'Александр', 'Сергеевич', 1),
('Пастернак', 'Борис', 'Леонидович', 1),
('Шолохов', 'Михаил', 'Александрович', 1),
('Глуховский', 'Дмитрий', 'Алексеевич', 1),
('Тургенев', 'Иван', 'Сергеевич', 1),
('Ахматова', 'Анна', 'Андреевна', 0),
('Набоков', 'Владимир', 'Владимирович', 1),
('Чехов', 'Антон', 'Павлович', 1),
('Гоголь', 'Николай', 'Васильевич', 1),
('Горький', 'Максим', NULL, 1),
('Бунин', 'Иван', 'Алексеевич', 0),
('Есенин', 'Сергей', 'Александрович', 1),
('Цветаева', 'Марина', 'Ивановна', 1),
('Некрасов', 'Николай', 'Алексеевич', 1),
('Грибоедов', 'Александр', 'Сергеевич', 1),
('Хемингуэй', 'Эрнест', 'Миллер', 1),
('Шекспир', 'Уильям', NULL, 1),
('Дюма', 'Александр', NULL, 1);

INSERT INTO Издательство (Наименование) VALUES
('Эксмо'),
('АСТ'),
('Просвещение'),
('Азбука'),
('Дрофа'),
('Правда'),
('Альпина. Проза'),
('Т8'),
('Синбад'),
('Росмэн'),
('Лев'),
('Фламинго'),
('Самокат'),
('РИПОЛ'),
('Манн Иванов и Фербер'),
('Феникс'),
('Центрполиграф'),
('Проспект'),
('Питер');

INSERT INTO Жанр (Наименование) VALUES
('видения'),
('новелла'),
('ода'),
('опус'),
('очерк'),
('поэма'),
('повесть'),
('пьеса'),
('рассказ'),
('роман'),
('скетч'),
('эпопея'),
('эпос'),
('эссе'),
('комедия'),
('трагедия'),
('драма'),
('ужасы'),
('басня'),
('аполог'),
('былина'),
('баллада'),
('миф'),
('роман-эпопея'),
('сказка'),
('послание'),
('элегия'),
('эпиграмма'),
('стансы'),
('научная фантастика');

INSERT INTO Книга (Название, ID_издательства, Год_издания, ISBN, УДК, ББК, Описание, Количество_страниц, Изображение) VALUES
('Война и мир. Книга 1. Том 1, 2', 2, 2022, '978-5-17-090468-6', '-', '-',
'"Война и мир" - роман-эпопея Льва Толстого, одно из крупнейших произведений мировой литературы, описывающее жизнь русского общества в эпоху Наполеоновских войн. "Война и мир" - это масштабная картина жизни России, взятая во всех ее социальных слоях (от крестьян до императора Александра I), и детальное описание хода военных действий, и осмысление поведения человека на войне, но главное - это глубокое философское осмысление и исследование жизни как таковой - в быту, в семье, в мирное время, на войне.
Именно поэтому "Войну и мир" можно читать и перечитывать всю жизнь - этот роман никогда не потеряет своей актуальности.',
960, '1.jpg'),


('Война и мир. Книга 2. Том 3, 4', 2, 2022, '978-5-17-090471-6', '-', '-',
'Классик отечественной прозы Лев Толстой переписывал роман‑эпопею «Война и мир» восемь раз, а в целом потратил на создание произведения шесть лет. Его главные герои демонстрируют противоположные жизненные ориентиры. Князь Андрей Болконский руководствуется разумом, а Пьер Безухов — сердцем. Французский император Наполеон Бонапарт идет на любые жертвы ради своих целей, а русский полководец Михаил Кутузов жалеет солдат.

Первый и второй тома романа охватывают период с 1805 по 1812 годы. Болконский участвует в войне с Францией, а после знакомится с Наташей Ростовой и решает на ней жениться. Безухов же получает огромное наследство и понимает, что несчастлив в семейной жизни...

Третий и четвертый тома сконцентрированы на времени Отечественной войны против французских войск Наполеона. Русское общество переживает огромный патриотический подъем. Даже пятнадцатилетний брат Наташи Петя Ростов, несмотря на возраст, хочет добиться разрешения уйти на военную службу лично от императора. Не остаются в стороне Болконский и Безухов. И для обоих война 1812 года становится поворотным событием в судьбе...',
992, '2.jpg'),


('Преступление и наказание', 4, 2023, '978-5-389-02279-9', '-', '-',
'Включенный во все школьные и вузовские программы, неоднократно экранизированный, роман Достоевского «Преступление и наказание» не перестал от этого быть одним из самых ярких и «краеугольных» произведений русской и мировой литературы.
Этот роман говорит не только о преступлении и наказании, но и о жертве, любви и сострадании.',
672, '3.jpg'),

('Мастер и Маргарита', 2,  2018, '978-5-17-112130-3', '-', '-',
'Бессмертное, загадочное и остроумное "Евангелие от Сатаны" Михаила Булгакова. Роман, уникальный в российской литературе ХХ столетия. Трудно себе представить, какое влияние он оказал на мировую культуру. На основе "Мастера и Маргариты" снимались и продолжают сниматься фильмы и телесериалы, это произведение легло в основу оперы, симфонии, рок-оперы, его иллюстрировали самые знаменитые художники и фотографы. Достаточно перечислить лишь немногих создателей произведений, посвященных шедевру Булгакова и им вдохновленных: Анджей Вайда, Эннио Морриконе, Мик Джаггер, Дэвид Боуи. Чем же заворожила столь разных творческих личностей история о дьяволе и его свите, почтивших своим присутствием Москву 1930-х, о прокураторе Иудеи всаднике Понтии Пилате и нищем философе Иешуа Га-Ноцри, о талантливом и несчастном Мастере и его прекрасной и верной возлюбленной Маргарите?..',
512, '4.jpg'),


('Капитанская дочка', 2, 2023, '978-5-17-092807-1', '-', '-',
'"Повести Белкина" – цикл из пяти повестей. Временами – трагические, временами – забавные, а порой даже мистические, они рассказывают нам истории о любви, мести, одиночестве, о поиске смысла жизни. "Дубровский" – увлекательный роман-повесть о внезапно вспыхнувшем чувстве между потомками двух враждующих семейств. "Капитанская дочка" – исторический роман, в котором на фоне крестьянского восстания Емельяна Пугачева разворачивается трогательная история любви. И наконец, неоконченное произведение "Арап Петра Великого" – первая попытка наиболее полно описать время правления Петра I, а также рассказ о судьбе предка Пушкина Абрама Петровича Ганнибала.
Все эти произведения объединяет тонкое и глубокое описание характеров персонажей, будь то крестьянин или помещик, влюбленная девушка или мятежник Пугачев, богатейший русский язык и, наконец, мастерское умение создавать увлекательные сюжеты – не случайно по прозе Пушкина снято столько фильмов.',
352, '5.jpg'),

('Доктор Живаго', 1, 2021, '978-5-04-122100-3', '-', '-',
'"Как обещало, не обманывая, проникло солнце утром рано, косою полосой шафрановою от занавеси до дивана..."
Самые лучшие, самые сокровенные стихи Б. Пастернак вложил в уста своего любимого героя Юрия Живаго. Этот роман - о любви, о России, о русской природе, о русской интеллигенции... Это роман обо всей нашей жизни. И он удивительно созвучен сегодняшнему дню.',
624, '6.jpg'),


('Судьба человека', 4, 2021, '978-5-389-09472-7', '-', '-',
'Михаил Александрович Шолохов – один из самых выдающихся писателей русской советской литературы, лауреат Нобелевской премии, автор романов «Тихий Дон» и «Поднятая целина». В настоящее издание вошли произведения автора, посвященные Великой Отечественной войне: «Они сражались за Родину», «Судьба человека», «Наука о ненависти», «Очерки военных лет» – возможно, наиболее пронзительные, яркие, трагичные и, вместе с тем, жизнеутверждающие тексты, созданные на тему войны не только в отечественной, но и в мировой литературе.',
352, '7.jpg'),


('Метро 2033', 2, 2019, '978-5-17-114425-8', '-', '-',
'2033 год. Весь мир лежит в руинах. Человечество почти полностью уничтожено. Москва превратилась в город-призрак, отравленный радиацией и населённый чудовищами. Немногие выжившие люди прячутся в московском метро - самом большом противоатомном бомбоубежище на земле. Его станции превратились в города-государства, а в туннелях царит тьма и обитает ужас. Артему, жителю ВДНХ, предстоит пройти через все метро, чтобы спасти от страшной опасности свою станцию, а может быть, и всё человечество. Культовый сетевой роман Дмитрия Глуховского уже известен ста тысячам интернет-пользователей. Выхода этой книги ждали все.',
384, '8.jpg'),

('Отцы и дети', 4, 2011, '978-5-389-02683-4', '-', '-',
'"Отцы и дети" - самый известный и самый философский из всех романов Тургенева. Задумывая роман, Тургенев пытался осмыслить характер и направление "новых людей" - героев новой эпохи в общественной жизни России. Так кто же он такой - тургеневский Базаров, если сам автор говорил о нем: "Хотел ли я обругать Базарова или его превознести? Я этого сам не знаю..."',
288, '9.jpg'),

('Чайка. Вишневый сад', 2, 2022, '978-5-17-148964-9', '-', '-',
'В книгу вошли самые известные пьесы А.П. Чехова "Чайка", "Дядя Ваня", "Вишневый сад". Сначала пьеса "Чайка" провалилась, но через два года в постановке Московского Художественного театра пьеса имела ошеломляющий успех и стала символом театра. Здесь же были поставлены "Дядя Ваня" и "Вишневый сад". Пьесы А.П. Чехова не сходят со сцен театров всего мира. Возможно, секрет такой популярности в особом взгляде автора на человеческие взаимоотношения и особом способе их изображения в художественном тексте. "Пусть на сцене все будет так же сложно и так же вместе с тем просто, как и в жизни, - говорил Чехов. - Люди обедают, только обедают, а в это время слагается их счастье и разбиваются их жизни".',
256, '10.jpg');

INSERT INTO Автор_Книги (ID_книги, ID_автора) VALUES
(1, 1), (2, 1), (3, 2), (4, 3), (5, 4), (6, 5), (7, 6), (8, 7), (9, 8), (10, 11);

INSERT INTO Жанр_Книги (ID_книги, ID_жанра) VALUES
(1, 24),
(2, 24),
(3, 10),
(4, 10),
(5, 10),
(6, 10),
(7, 9),
(8, 10),
(8, 30),
(9, 10),
(10, 15);

INSERT INTO Экземпляр_Книги (ID_книги, Дата_добавления) VALUES
(1, '2024-01-01 00:00:00'), (1, '2024-01-01 00:00:00'), (1, '2024-01-01 00:00:00'),
(2, '2024-01-01 00:00:00'), (2, '2024-01-01 00:00:00'), (2, '2024-01-01 00:00:00'),
(3, '2024-01-01 00:00:00'), (3, '2024-01-01 00:00:00'), (3, '2024-01-01 00:00:00'),
(4, '2024-01-01 00:00:00'), (4, '2024-01-01 00:00:00'), (4, '2024-01-01 00:00:00'),
(5, '2024-01-01 00:00:00'), (5, '2024-01-01 00:00:00'), (5, '2024-01-01 00:00:00'),
(6, '2024-01-01 00:00:00'), (6, '2024-01-01 00:00:00'), (6, '2024-01-01 00:00:00'),
(7, '2024-01-01 00:00:00'), (7, '2024-01-01 00:00:00'), (7, '2024-01-01 00:00:00'),
(8, '2024-01-01 00:00:00'), (8, '2024-01-01 00:00:00'), (8, '2024-01-01 00:00:00'),
(9, '2024-01-01 00:00:00'), (9, '2024-01-01 00:00:00'), (9, '2024-01-01 00:00:00'),
(10, '2024-01-01 00:00:00'), (10, '2024-01-01 00:00:00'), (10, '2024-01-01 00:00:00');

INSERT INTO Пользователь (Фамилия, Имя, Отчество, Дата_рождения, Пол, Номер_телефона, Дата_регистрации) VALUES
('Каянов', 'Даниил', 'Владимирович', '2004-01-28', 1, '79288811378', '2024-01-08'),
('Иванов', 'Петр', 'Алексеевич', '2004-01-28', 1, '79288811378', '2024-01-08'),
('Петрова', 'Дарья', 'Васильевна', '2004-01-28', 0, '79288811378', '2024-01-08');